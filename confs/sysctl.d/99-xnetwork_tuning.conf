## https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
## https://www.kernel.org/doc/Documentation/networking/scaling.txt
## https://www.kernel.org/doc/Documentation/networking/ixgbe.txt
## https://www.netdev01.org/docs/miller-Ottawa2015-Keynote.pdf

# https://www.kernel.org/doc/Documentation/sysctl/fs.txt
# max system-wide number of file descriptors
fs.file-max=1048576

## http://dak1n1.com/blog/7-performance-tuning-intel-10gbe/
# Increase system IP port range to allow for more concurrent connections
net.ipv4.ip_local_port_range=1024 65535

# TCP performance tuning entries:
# http://fasterdata.es.net/host-tuning/linux/
# Set maximum TCP window sizes to 128 MiB
net.core.rmem_max=134217728
net.core.wmem_max=134217728

# Set minimum (16 KiB), default (256k), and maximum (64 MiB) TCP buffer limits
net.ipv4.tcp_rmem=4096 87380 67108864
net.ipv4.tcp_wmem=4096 65536 67108864

# Enable window scaling as defined in RFC1323 - this must be enabled
net.ipv4.tcp_window_scaling=1

# If set, TCP performs receive buffer auto-tuning
net.ipv4.tcp_moderate_rcvbuf=1

# Set maximum network input buffer queue length
net.core.netdev_max_backlog=320000

# Maximal number of remembered connection requests, which have not received an acknowledgment from connecting client.
net.ipv4.tcp_max_syn_backlog=2048

# Limit of socket listen() backlog, known in userspace as SOMAXCONN
net.core.somaxconn=2048

# Enable timestamps as defined in RFC1323 - required for > 1gbit
net.ipv4.tcp_timestamps=1

# Enable select acknowledgments
net.ipv4.tcp_sack=1

# Increase the tcp-time-wait buckets pool size to prevent simple DOS attacks
#net.ipv4.tcp_max_tw_buckets=1440000

# By default, TCP saves various connection metrics in the route cache when the connection closes,
# so that connections established in the near future can use these to set initial conditions.
# http://www.nas.nasa.gov/hecc/support/kb/optional-advanced-tuning-for-linux_138.html
# net.ipv4.tcp_no_metrics_save=1

# TCP timeout setting (socket time-out closing)
net.ipv4.tcp_fin_timeout=5

# Number of times initial SYNs for an active TCP connection attempt will be retransmitted (def=5)
net.ipv4.tcp_syn_retries=3

# Number of times SYNACKs for a passive TCP connection attempt will be retransmitted (def=5)
net.ipv4.tcp_synack_retries=3

# Try to close things only twice
net.ipv4.tcp_orphan_retries=2

# Keep fragments for 15 sec (default: 30)
net.ipv4.ipfrag_time=15

# TCK keepalive
# https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
# How frequently the probes are send out. Multiplied by tcp_keepalive_probes it is time to kill not responding connection, after probes started.
net.ipv4.tcp_keepalive_time = 10

# How often TCP sends out keepalive messages when keepalive is enabled
net.ipv4.tcp_keepalive_intvl = 3

# How many keepalive probes TCP sends out, until it decides that the connection is broken.
net.ipv4.tcp_keepalive_probes = 5

